name: Fuzzing Workflow
on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Domain(s) to scan'
        required: true
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Download ParamSpider
        run: git clone https://github.com/0xKayala/ParamSpider.git
        working-directory: ./  # Make sure you're in the repository root

      - name: Download Nuclei
        run: git clone https://github.com/projectdiscovery/nuclei.git
        working-directory: ./  # Make sure you're in the repository root

      - name: Download Templates
        run: git clone https://github.com/projectdiscovery/fuzzing-templates.git
        working-directory: ./  # Make sure you're in the repository root
        

  fuzzing:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Setup Dependencies
        run: sudo apt-get install libpcap-dev

      - name: Cache Go
        id: cache-go
        uses: actions/cache@v2
        with:
          path: /home/runner/go
          key: ${{ runner.os }}-go

      - name: Setting up ProjectDiscovery tools
        if: steps.cache-go.outputs.cache-hit != 'true'
        env:
          GO111MODULE: on
        run: |
          go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest

      - name: Running ParamSpider and Nuclei scan
        working-directory: 1/paramspider.py
        run: |
          pip3 install certifi==2020.4.5.1 chardet==3.0.4 idna==2.9 requests==2.23.0 urllib3==1.25.8
          chmod +x paramspider.py

          # Replace 'example.com' with the actual domain you want to scan
          python3 paramspider.py --domain ${{ github.event.inputs.domain }} --output output/output.txt

          nuclei -l output/output.txt -rl 300 -bs 35 -c 30 -mhe 10 -ni -t fuzzing-templates/ -stats -silent -severity critical,medium,high,low -o output/vuln.txt

          find output -type f -exec sort {} -o {} ;

  commit-push:
    runs-on: ubuntu-latest
    needs: fuzzing
    steps:
      - name: Configure Git
        working-directory: ./
        run: |
          git config --local user.email "j.oejoequte@gmail.com"
          git config --global user.name "joejoequte"

      - name: Commit results to GitHub
        run: |
          git commit -m "Nuclei Report" -a --allow-empty

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          branch: ${{ github.ref }}
